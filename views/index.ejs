<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous">
    <script src="https://cdn.tailwindcss.com"></script>

    <link rel="stylesheet" href="styles.css">
     <style>
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
* {
font-family: 'Inter', sans-serif;
}
html,body {
font-family: 'Inter', sans-serif;
}
</style>
  <style>
    .modal {
      transition: opacity 0.25s ease;
    }
    body.modal-active {
      overflow-x: hidden;
      overflow-y: visible !important;
    }
  </style>
    <title>Obsidian</title>
</head>
<body class="bg-gradient-to-br from-purple-900 to-black">
<!-- bookmark stuff -->

<div style="z-index: 100301020312301023010230021" class="modal opacity-0 pointer-events-none fixed w-full h-full top-0 left-0 flex items-center justify-center">
  <div class="modal-overlay absolute w-full h-full bg-gray-900 opacity-50"></div>

  <div class="modal-container bg-white w-11/12 md:max-w-md mx-auto rounded shadow-lg z-50 overflow-y-auto">

    <div class="modal-content py-4 text-left px-6">
      <div class="flex justify-between items-center pb-3">
        <p class="text-2xl text-black font-bold">Bookmarks</p>
        <div class="modal-close cursor-pointer z-50">
          <svg class="fill-current text-purple-700" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
            <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
          </svg>
        </div>
      </div>
      <div class="flex flex-col">
        <div class="flex justify-between items-center border-b py-2">
          <div class="flex flex-col">
            <p class="text-black" contenteditable="true">Google</p>
            <p class="text-gray-500" contenteditable="true">https://www.google.com</p>
          </div>
          <div class="gap-4">
                    <button class="text-purple-700" onclick="openApp(this.parentElement)">
            <i class="fas fa-up-right-from-square"></i>
          </button>
          <button class="text-purple-700" onclick="saveChanges(this.parentElement)">
            <i class="fas fa-save"></i>
          </button></div>
        </div>

      </div>

      <div class="flex justify-end pt-2 gap-2">
              <button class="px-4 bg-purple-700 p-3 rounded-lg text-white hover:bg-purple-600">Add New</button>
        <button class="modal-close px-4 bg-purple-700 p-3 rounded-lg text-white hover:bg-purple-600">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- end of bookmark stuff -->
    <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-lg w-96">
            <div class="mb-6">
                <label for="inputField" class="block text-purple-700 text-5xl mb-5 text-center justify-center font-bold">Obsidian</label>
                <form class="relative">
                    <input type="text" placeholder="Search the web freely" id="inputField" class="w-full px-4 py-2 border rounded-md focus:outline-none focus:border-purple-700 transition-all duration-300">
                    <button type="submit" class="absolute right-0 top-0 bottom-0 px-3 py-2 bg-purple-700 hover:bg-purple-800 text-white rounded-r-md">
                        <i class="fa fa-search"></i>
                    </button>
                </form>
            </div>
            <div class="flex space-x-2">
                <button id="settingsButton" class="modal-open group relative w-full text-center justify-center flex items-center px-4 py-2 bg-purple-700 hover:bg-purple-800 text-white rounded-md">
                    <i class="fa-solid fa-bookmark mr-2"></i> Bookmarks
                </button>
            </div>
        </div>
    </div>
    <script src="/assets/js/index.js"></script>
<script src="/uv/uv.bundle.js"></script>
<script src="/uv/uv.config.js"></script>
     <p class="absolute bottom-0 right-0 text-sm text-white p-2">v2.0</p>
  <script>
    var openmodal = document.querySelectorAll('.modal-open')
    for (var i = 0; i < openmodal.length; i++) {
      openmodal[i].addEventListener('click', function(event){
    	event.preventDefault()
    	toggleModal()
      })
    }
    
    const overlay = document.querySelector('.modal-overlay')
    overlay.addEventListener('click', toggleModal)
    
    var closemodal = document.querySelectorAll('.modal-close')
    for (var i = 0; i < closemodal.length; i++) {
      closemodal[i].addEventListener('click', toggleModal)
    }
    
    document.onkeydown = function(evt) {
      evt = evt || window.event
      var isEscape = false
      if ("key" in evt) {
    	isEscape = (evt.key === "Escape" || evt.key === "Esc")
      } else {
    	isEscape = (evt.keyCode === 27)
      }
      if (isEscape && document.body.classList.contains('modal-active')) {
    	toggleModal()
      }
    };
    
    
    function toggleModal () {
      const body = document.querySelector('body')
      const modal = document.querySelector('.modal')
      modal.classList.toggle('opacity-0')
      modal.classList.toggle('pointer-events-none')
      body.classList.toggle('modal-active')
    }
   
  </script>
  <script>
  function saveChanges(parentElement) {
    const titleElement = parentElement.querySelector('.text-black');
    const urlElement = parentElement.querySelector('.text-gray-500');

    const title = titleElement.textContent;
    const url = urlElement.textContent;

    const bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
    const existingIndex = bookmarks.findIndex(b => b.title === title && b.url === url);

    if (existingIndex !== -1) {
      bookmarks[existingIndex] = { title, url };
    } else {
      bookmarks.push({ title, url });
    }

    localStorage.setItem('bookmarks', JSON.stringify(bookmarks));
  }

  function deleteBookmark(parentElement) {
    const titleElement = parentElement.querySelector('.text-black');
    const urlElement = parentElement.querySelector('.text-gray-500');

    const title = titleElement.textContent;
    const url = urlElement.textContent;

    const bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];
    const updatedBookmarks = bookmarks.filter(b => b.title !== title || b.url !== url);

    localStorage.setItem('bookmarks', JSON.stringify(updatedBookmarks));
    parentElement.remove();
  }

  function addNewBookmark() {
    const bookmarksContainer = document.querySelector('.flex.flex-col');
    const newBookmarkDiv = document.createElement('div');
    newBookmarkDiv.className = 'flex justify-between items-center border-b py-2';
    const titleDiv = document.createElement('div');
    titleDiv.className = 'flex flex-col';
    titleDiv.innerHTML = '<p class="text-black" contenteditable="true">Bookmark Title</p>';
    titleDiv.innerHTML += '<p class="text-gray-500" contenteditable="true">Bookmark URL</p>';
    const buttonGroupDiv = document.createElement('div');
    buttonGroupDiv.className = 'flex gap-2';
    const saveButton = document.createElement('button');
    saveButton.className = 'text-purple-700';
    saveButton.innerHTML = '<i class="fas fa-save"></i>';
    saveButton.onclick = function() {
      saveChanges(this.parentElement.parentElement);
    };
    const deleteButton = document.createElement('button');
    deleteButton.className = 'text-red-700';
    deleteButton.innerHTML = '<i class="fas fa-trash"></i>';
    deleteButton.onclick = function() {
      deleteBookmark(this.parentElement.parentElement);
    };
    newBookmarkDiv.appendChild(titleDiv);
    buttonGroupDiv.appendChild(saveButton);
    buttonGroupDiv.appendChild(deleteButton);
    newBookmarkDiv.appendChild(buttonGroupDiv);
    bookmarksContainer.appendChild(newBookmarkDiv);
  }
  function loadBookmarks() {
    const bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];

    const bookmarksContainer = document.querySelector('.flex.flex-col');
    bookmarksContainer.innerHTML = '';

    bookmarks.forEach(bookmark => {
      const bookmarkDiv = document.createElement('div');
      bookmarkDiv.className = 'flex justify-between items-center border-b py-2';

      const titleDiv = document.createElement('div');
      titleDiv.className = 'flex flex-col';
      titleDiv.innerHTML = `<p class="text-black" contenteditable="true">${bookmark.title}</p>`;
      titleDiv.innerHTML += `<p class="text-gray-500" contenteditable="true">${bookmark.url}</p>`;
      const buttonGroupDiv = document.createElement('div');
      buttonGroupDiv.className = 'flex gap-2';
      const saveButton = document.createElement('button');
      saveButton.className = 'text-purple-700';
      saveButton.innerHTML = '<i class="fas fa-save"></i>';
      saveButton.onclick = function() {
        saveChanges(this.parentElement.parentElement);
      };
      const openButton = document.createElement('button');
      openButton.className = 'text-purple-700';
      openButton.innerHTML = '<i class="fa-solid fa-up-right-from-square"></i>';
      openButton.onclick = function() {
        openApp(this.parentElement.parentElement);
      };
      const deleteButton = document.createElement('button');
      deleteButton.className = 'text-red-700';
      deleteButton.innerHTML = '<i class="fas fa-trash"></i>';
      deleteButton.onclick = function() {
        deleteBookmark(this.parentElement.parentElement);
      };

      bookmarkDiv.appendChild(titleDiv);
      buttonGroupDiv.appendChild(saveButton);
      buttonGroupDiv.appendChild(openButton);
      buttonGroupDiv.appendChild(deleteButton);
      bookmarkDiv.appendChild(buttonGroupDiv);

      bookmarksContainer.appendChild(bookmarkDiv);
    });
  }
  document.addEventListener('DOMContentLoaded', function() {
    loadBookmarks();
  });
  const addNewButton = document.querySelector('.flex.justify-end.pt-2.gap-2 button:first-child');
  addNewButton.addEventListener('click', addNewBookmark);
</script>
</body>
</html>
